name: TELCO_ANALYTICS_MODEL
tables:
  - name: TB_R_DATE
    base_table:
      database: TELCO
      schema: DATAMART
      table: TB_R_DATE
    dimensions:
      - name: DATE_ID
        expr: DATE_ID
        data_type: DATE
      - name: DAY
        expr: DAY
        data_type: NUMBER(2,0)
      - name: FULL_DATE
        expr: FULL_DATE
        data_type: DATE
      - name: MONTH
        expr: MONTH
        data_type: NUMBER(2,0)
      - name: MONTH_NAME
        expr: MONTH_NAME
        data_type: VARCHAR(20)
      - name: QUARTER
        expr: QUARTER
        data_type: NUMBER(1,0)
      - name: YEAR
        expr: YEAR
        data_type: NUMBER(4,0)
    primary_key:
      columns:
        - DATE_ID
  - name: TB_R_CUSTOMER
    base_table:
      database: TELCO
      schema: DATAMART
      table: TB_R_CUSTOMER
    dimensions:
      - name: AGE_GROUP
        expr: AGE_GROUP
        data_type: VARCHAR(20)
      - name: CITY
        expr: CITY
        data_type: VARCHAR(50)
      - name: COUNTRY_CODE
        expr: COUNTRY_CODE
        data_type: VARCHAR(10)
      - name: CUSTOMER_ID
        expr: CUSTOMER_ID
        data_type: VARCHAR(20)
      - name: CUSTOMER_NAME
        expr: CUSTOMER_NAME
        data_type: VARCHAR(100)
      - name: DATE_JOINED
        expr: DATE_JOINED
        data_type: DATE
      - name: DEPENDENTS
        expr: DEPENDENTS
        data_type: VARCHAR(5)
      - name: GENDER
        expr: GENDER
        data_type: VARCHAR(10)
      - name: PARTNER
        expr: PARTNER
        data_type: VARCHAR(5)
      - name: SENIOR_CITIZEN
        expr: SENIOR_CITIZEN
        data_type: VARCHAR(5)
      - name: STATE
        expr: STATE
        data_type: VARCHAR(50)
      - name: ZIP_CODE
        expr: ZIP_CODE
        data_type: VARCHAR(10)
    primary_key:
      columns:
        - CUSTOMER_ID
  - name: TB_F_REVENUE
    base_table:
      database: TELCO
      schema: DATAMART
      table: TB_F_REVENUE
    dimensions:
      - name: CONTRACT_TYPE
        expr: CONTRACT_TYPE
        data_type: VARCHAR(30)
      - name: CUSTOMER_ID
        expr: CUSTOMER_ID
        data_type: VARCHAR(20)
      - name: date_joined
        expr: date_joined
        data_type: date
      - name: PAPERLESS_BILLING
        expr: PAPERLESS_BILLING
        data_type: VARCHAR(10)
      - name: PAYMENT_METHOD
        expr: PAYMENT_METHOD
        data_type: VARCHAR(40)
    facts:
      - name: CLTV
        expr: CLTV
        data_type: FLOAT
      - name: MONTHLY_CHARGES
        expr: MONTHLY_CHARGES
        data_type: FLOAT
      - name: TENURE_MONTHS
        expr: TENURE_MONTHS
        data_type: NUMBER(4,0)
      - name: TOTAL_CHARGES
        expr: TOTAL_CHARGES
        data_type: FLOAT
  - name: TB_F_SERVICE_USAGE
    base_table:
      database: TELCO
      schema: DATAMART
      table: TB_F_SERVICE_USAGE
    dimensions:
      - name: CONTRACT_TYPE
        expr: CONTRACT_TYPE
        data_type: VARCHAR(30)
      - name: CUSTOMER_ID
        expr: CUSTOMER_ID
        data_type: VARCHAR(20)
      - name: DEVICE_PROTECTION
        expr: DEVICE_PROTECTION
        data_type: VARCHAR(20)
      - name: INTERNET_SERVICE
        expr: INTERNET_SERVICE
        data_type: VARCHAR(30)
      - name: MULTIPLE_LINES
        expr: MULTIPLE_LINES
        data_type: VARCHAR(20)
      - name: ONLINE_BACKUP
        expr: ONLINE_BACKUP
        data_type: VARCHAR(20)
      - name: ONLINE_SECURITY
        expr: ONLINE_SECURITY
        data_type: VARCHAR(20)
      - name: PAYMENT_METHOD
        expr: PAYMENT_METHOD
        data_type: VARCHAR(40)
      - name: PHONE_SERVICE
        expr: PHONE_SERVICE
        data_type: VARCHAR(10)
      - name: STREAMING_MOVIES
        expr: STREAMING_MOVIES
        data_type: VARCHAR(20)
      - name: STREAMING_TV
        expr: STREAMING_TV
        data_type: VARCHAR(20)
      - name: TECH_SUPPORT
        expr: TECH_SUPPORT
        data_type: VARCHAR(20)
  - name: TB_F_CHURN_PREDICTION
    base_table:
      database: TELCO
      schema: DATAMART
      table: TB_F_CHURN_PREDICTION
    dimensions:
      - name: CUSTOMER_ID
        expr: CUSTOMER_ID
        data_type: VARCHAR(20)
      - name: PREDICTION_DATE
        expr: PREDICTION_DATE
        data_type: DATE
      - name: PREDICTION_RESULTS
        expr: PREDICTION_RESULTS
        data_type: VARCHAR(20)
    facts:
      - name: CHURN_FLAG
        expr: CASE WHEN PREDICTION_RESULTS = 'Churn' THEN 1 ELSE 0 END
        data_type: NUMBER(1,0)
      - name: CHURN_REASON
        expr: CHURN_REASON
        data_type: VARCHAR(255)
  - name: TB_F_CUSTOMER_CLUSTER
    base_table:
      database: TELCO
      schema: DATAMART
      table: TB_F_CUSTOMER_CLUSTER
    dimensions:
      - name: CUSTOMER_ID
        expr: CUSTOMER_ID
        data_type: VARCHAR(20)
      - name: CUSTOMER_SEGMENTATION
        expr: CUSTOMER_SEGMENTATION
        data_type: VARCHAR(100)
      - name: PREDICTION_DATE
        expr: PREDICTION_DATE
        data_type: DATE
  - name: TB_F_REVIEWS_ENRICHED
    base_table:
      database: TELCO
      schema: DATAMART
      table: TB_F_REVIEWS_ENRICHED
    dimensions:
      - name: COUNTRY
        expr: COUNTRY
        data_type: VARCHAR(256)
      - name: FULL_DATE
        expr: FULL_DATE
        data_type: DATE
      - name: SATISFACTION_LABEL
        expr: SATISFACTION_LABEL
        data_type: VARCHAR(10)
      - name: SENTIMENT_BUCKET
        expr: SENTIMENT_BUCKET
        data_type: VARCHAR(8)
    facts:
      - name: SENTIMENT_SCORE
        expr: SENTIMENT_SCORE
        data_type: FLOAT
      - name: THUMBS_UP_COUNT
        expr: THUMBS_UP_COUNT
        data_type: NUMBER(10,0)
relationships:
  - name: REVENUE_TO_CUSTOMER
    left_table: TB_F_REVENUE
    right_table: TB_R_CUSTOMER
    relationship_columns:
      - left_column: CUSTOMER_ID
        right_column: CUSTOMER_ID
    relationship_type: many_to_one
    join_type: inner
  - name: USAGE_TO_CUSTOMER
    left_table: TB_F_SERVICE_USAGE
    right_table: TB_R_CUSTOMER
    relationship_columns:
      - left_column: CUSTOMER_ID
        right_column: CUSTOMER_ID
    relationship_type: many_to_one
    join_type: inner
  - name: CHURN_TO_CUSTOMER
    left_table: TB_F_CHURN_PREDICTION
    right_table: TB_R_CUSTOMER
    relationship_columns:
      - left_column: CUSTOMER_ID
        right_column: CUSTOMER_ID
    relationship_type: many_to_one
    join_type: inner
  - name: CLUSTER_TO_CUSTOMER
    left_table: TB_F_CUSTOMER_CLUSTER
    right_table: TB_R_CUSTOMER
    relationship_columns:
      - left_column: CUSTOMER_ID
        right_column: CUSTOMER_ID
    relationship_type: many_to_one
    join_type: inner
verified_queries:
  - name: churn_by_segment
    question: |
      Show churn rate by customer segment and contract type.
    sql: |
      SELECT c.customer_segmentation,
             r.contract_type,
             ROUND(SUM(CASE WHEN p.prediction_results = 'Yes' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS churn_rate
      FROM TB_F_CHURN_PREDICTION p
      JOIN TB_R_CUSTOMER cu ON p.customer_id = cu.customer_id
      JOIN TB_F_REVENUE r ON cu.customer_id = r.customer_id
      JOIN TB_F_CUSTOMER_CLUSTER c ON cu.customer_id = c.customer_id
      GROUP BY c.customer_segmentation, r.contract_type
      ORDER BY churn_rate DESC
  - name: sentiment_vs_revenue
    question: |
      Compare average sentiment score and total charges per customer region.
    sql: |
      SELECT cu.state, cu.city,
             ROUND(AVG(rv.sentiment_score), 2) AS avg_sentiment,
             ROUND(SUM(r.total_charges), 2) AS total_revenue
      FROM TB_F_REVIEWS_ENRICHED rv
      JOIN TB_R_CUSTOMER cu ON rv.country = cu.country_code
      JOIN TB_F_REVENUE r ON cu.customer_id = r.customer_id
      GROUP BY cu.state, cu.city
      ORDER BY avg_sentiment DESC
  - name: cltv_and_churn
    question: |
      Show correlation between CLTV and churn probability across segments.
    sql: |
      SELECT c.customer_segmentation,
             ROUND(AVG(r.cltv),2) AS avg_cltv,
             ROUND(SUM(CASE WHEN p.prediction_results = 'Yes' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS churn_rate
      FROM TB_F_REVENUE r
      JOIN TB_F_CHURN_PREDICTION p ON r.customer_id = p.customer_id
      JOIN TB_F_CUSTOMER_CLUSTER c ON r.customer_id = c.customer_id
      GROUP BY c.customer_segmentation
      ORDER BY churn_rate DESC
  - name: top_revenue_segments
    question: |
      Which customer segments generate the highest total revenue?
    sql: |
      SELECT c.customer_segmentation,
             ROUND(SUM(r.total_charges), 2) AS total_revenue
      FROM TB_F_REVENUE r
      JOIN TB_F_CUSTOMER_CLUSTER c ON r.customer_id = c.customer_id
      GROUP BY c.customer_segmentation
      ORDER BY total_revenue DESC
      LIMIT 10
  - name: churn_rate_by_payment_method
    question: |
      How does churn rate differ by payment method?
    sql: |
      SELECT r.payment_method,
             ROUND(SUM(CASE WHEN p.prediction_results = 'Yes' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS churn_rate
      FROM TB_F_CHURN_PREDICTION p
      JOIN TB_F_REVENUE r ON p.customer_id = r.customer_id
      GROUP BY r.payment_method
      ORDER BY churn_rate DESC
  - name: tenure_vs_churn
    question: |
      What is the churn rate by customer tenure range?
    sql: |
      SELECT CASE 
               WHEN r.tenure_months < 12 THEN 'Under 1 Year'
               WHEN r.tenure_months BETWEEN 12 AND 24 THEN '1-2 Years'
               WHEN r.tenure_months BETWEEN 25 AND 48 THEN '2-4 Years'
               ELSE '4+ Years'
             END AS tenure_bucket,
             ROUND(SUM(CASE WHEN p.prediction_results = 'Yes' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS churn_rate
      FROM TB_F_REVENUE r
      JOIN TB_F_CHURN_PREDICTION p ON r.customer_id = p.customer_id
      GROUP BY tenure_bucket
      ORDER BY churn_rate DESC
  - name: customer_lifetime_value_distribution
    question: |
      Show average CLTV and count of customers by segment.
    sql: |
      SELECT c.customer_segmentation,
             ROUND(AVG(r.cltv),2) AS avg_cltv,
             COUNT(DISTINCT r.customer_id) AS customer_count
      FROM TB_F_REVENUE r
      JOIN TB_F_CUSTOMER_CLUSTER c ON r.customer_id = c.customer_id
      GROUP BY c.customer_segmentation
      ORDER BY avg_cltv DESC
  - name: contract_type_churn_analysis
    question: |
      Compare churn rate across contract types.
    sql: |
      SELECT r.contract_type,
             ROUND(SUM(CASE WHEN p.prediction_results = 'Yes' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS churn_rate,
             COUNT(*) AS total_customers
      FROM TB_F_CHURN_PREDICTION p
      JOIN TB_F_REVENUE r ON p.customer_id = r.customer_id
      GROUP BY r.contract_type
      ORDER BY churn_rate DESC
  - name: monthly_revenue_trend
    question: |
      Show monthly revenue trend over the last year.
    sql: |
      SELECT d.year,
             d.month_name,
             ROUND(SUM(r.total_charges), 2) AS total_revenue
      FROM TB_F_REVENUE r
      JOIN TB_R_DATE d ON r.date_joined = d.date_id
      WHERE d.year = YEAR(CURRENT_DATE)
      GROUP BY d.year, d.month_name
  - name: gender_based_churn
    question: |
      What is the churn rate difference between male and female customers?
    sql: |
      SELECT cu.gender,
             ROUND(SUM(CASE WHEN p.prediction_results = 'Yes' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS churn_rate
      FROM TB_R_CUSTOMER cu
      JOIN TB_F_CHURN_PREDICTION p ON cu.customer_id = p.customer_id
      GROUP BY cu.gender
      ORDER BY churn_rate DESC
  - name: cross_sell_opportunities
    question: |
      Identify customers who have internet service but no streaming TV or movies for cross-sell opportunities.
    sql: |
      SELECT su.customer_id,
             su.internet_service,
             su.streaming_tv,
             su.streaming_movies
      FROM TB_F_SERVICE_USAGE su
      WHERE su.internet_service IS NOT NULL
        AND (su.streaming_tv = 'No' OR su.streaming_movies = 'No')